---
title: "Shots"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(flextable)
library(ggchicklet)
library(magick)
library(ggimage)
library(ggsoccer)
library(tidytext)

name <- read_csv("data/name.csv")
position <- read_csv("data/position.csv")
shot_type <- read_csv("data/shot_type.csv")
body_part <- read_csv("data/body_part.csv")
goal_location <- read_csv("data/goal_location.csv")
time_xg <- read_csv("data/time_xg.csv")
shot_position <- read_csv("data/shot_position.csv")
insides <- read_csv("data/insides.csv")
#-----------------------------------------------------------
logo_fcb <- image_read("logo_fcb.png")
logo_fcb <- logo_fcb %>% 
  image_colorize(opacity = 85, color = '#ffe5e5') %>% 
  image_scale(400)
logo_fcb

logo_city <- image_read("logo_city.png")
logo_city <- logo_city %>% 
  image_colorize(opacity = 85, color = "#e5e5ff") %>% 
  image_scale(400)
logo_city

gradient <- "https://i.postimg.cc/fD6H2rJJ/gradient.png" #("#ffe5e5" & "#e5e5ff")
#-----------------------------------------------------------
euc.dist <- function(x1, x2) sqrt(sum((x1 - x2) ^ 2))
euc1 <- data.frame(x = 0, y = 50)
euc2 <- data.frame(x = 8.35, y = 35)
euc.dist(euc1, euc2)
```

```{r}
ggbackground(ggplot(name, aes(reorder(Name, Shots), Shots, label = Name)) +
  annotation_custom(grid::rasterGrob(logo_fcb, width = 0.4)) +
  annotation_custom(grid::rasterGrob(logo_city, width = 0.4)) +
  geom_chicklet(aes(fill = Club, color = Club), width = 0.75) +
  geom_label(hjust = 0, color = 'black', size = 3) +
  scale_y_continuous(limits = c(-0.02, 31.5), breaks = seq(0, 30, by = 1)) +
  scale_fill_manual(values = c("#B22222", "#131E3A")) +
  scale_color_manual(values = c("#B22222", "#131E3A")) +
  coord_flip() +
  labs(title = "\nA) Total Number of Shots Taken - by Player",
       subtitle = "Matchday 1-5 | 2023-2024",
       caption = "\nGraphic: @ypAnalysis | Data via Sofascore\n\n") +
  theme_classic() +  
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.title.y = element_blank(),
        axis.line.x = element_blank(),
        axis.line.y = element_blank(),
        legend.position = c(0.5, 0.11),
        legend.title = element_blank(),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, vjust = 0.1, size = 12, face = "bold"),
        plot.caption = element_text(hjust = 0.5, size = 9)) +
  annotate(x = 0, xend = 0, y = -0.02, yend = 30.02, colour = "black", lwd = 0.75, geom = "segment"), gradient)
ggsave("graphics/name.jpg", height = 8.5, width = 9)
```

```{r}
ggbackground(ggplot(position, aes(Club, Shots, label = paste0(Position, ": ", Shots))) +
  annotation_custom(grid::rasterGrob(logo_fcb, width = 0.4)) +
  annotation_custom(grid::rasterGrob(logo_city, width = 0.4)) +
  geom_chicklet(aes(fill = Club), width = 0.5, show.legend = F) +
  geom_label(color = 'white', fill = NA, size = 2.5, position = position_stack(vjust = 0.5)) +
  scale_y_continuous(limits = c(-0.02, 110.02), breaks = seq(0, 110, by = 10)) +
  scale_fill_manual(values = c("#B22222", "#131E3A")) +
  labs(y = "\nShots",
       title = "\nB) Total Number of Shots Taken - by Position",
       subtitle = "Matchday 1-5 | 2023-2024",
       caption = "\nGraphic: @ypAnalysis | Data via Sofascore\n\n") +
  theme_classic() +
  theme(axis.ticks.x = element_blank(),
        axis.title.x = element_blank(),
        axis.line.x = element_blank(),
        axis.line.y = element_blank(),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, vjust = 0.1, size = 12, face = "bold"),
        plot.caption = element_text(hjust = 0.5, size = 9)) +
  annotate(x = 0, xend = 0, y = -0.02, yend = 110.02, colour = "black", lwd = 0.75, geom = "segment") +
  annotate(y = 0, yend = 0, x = 0, xend = 3, colour = NA, lwd = 0.75, geom = "segment"),
gradient)
ggsave("graphics/position.jpg", width = 6)
```

```{r}
ggbackground(ggplot(shot_type, aes(Club, Shots, label = paste0(ShotType, ": ", Shots))) +
  annotation_custom(grid::rasterGrob(logo_fcb, width = 0.4)) +
  annotation_custom(grid::rasterGrob(logo_city, width = 0.4)) +
  geom_chicklet(aes(fill = Club, colour = NULL), width = 0.5, show.legend = F) +
  geom_text(color = 'white', fill = NA, size = 2.5, position = position_stack(vjust = 0.5)) +
  scale_y_continuous(limits = c(-0.02, 110.02), breaks = seq(0, 110, by = 10)) +
  scale_fill_manual(values = c("#B22222", "#131E3A")) +
  labs(y = "\nShots",
       title = "\nB) Total Number of Shots Taken - by Shot Type",
       subtitle = "Matchday 1-5 | 2023-2024",
       caption = "\nGraphic: @ypAnalysis | Data via Sofascore\n\n") +
  theme_classic() +
  theme(axis.ticks.x = element_blank(),
        axis.title.x = element_blank(),
        axis.line.x = element_blank(),
        axis.line.y = element_blank(),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, vjust = 0.1, size = 12, face = "bold"),
        plot.caption = element_text(hjust = 0.5, size = 9)) +
    annotate(x = 0, xend = 0, y = -0.02, yend = 110.02, colour = "black", lwd = 0.75, geom = "segment") +
  annotate(y = 0, yend = 0, x = 0, xend = 3, colour = NA, lwd = 0.75, geom = "segment"),
gradient)
ggsave("graphics/shot_type.jpg", width = 6, height = 8)
```

```{r}
ggbackground(ggplot(body_part, aes(Club, Shots, label = paste0(BodyPart, ": ", Shots))) +
  annotation_custom(grid::rasterGrob(logo_fcb, width = 0.4)) +
  annotation_custom(grid::rasterGrob(logo_city, width = 0.4)) +
  geom_chicklet(aes(fill = Club, colour = NULL), width = 0.5, show.legend = F) +
  geom_label(color = 'white', fill = NA, size = 2.5, position = position_stack(vjust = 0.5)) +
  scale_y_continuous(limits = c(-0.02, 110.02), breaks = seq(0, 110, by = 10)) +
  scale_fill_manual(values = c("#B22222", "#131E3A")) +
  labs(y = "\nShots",
       title = "\nA) Total Number of Shots Taken - by Body Part",
       subtitle = "Matchday 1-5 | 2023-2024",
       caption = "\nGraphic: @ypAnalysis | Data via Sofascore\n\n") +
  theme_classic() +
  theme(axis.ticks.x = element_blank(),
        axis.title.x = element_blank(),
        axis.line.x = element_blank(),
        axis.line.y = element_blank(),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, vjust = 0.1, size = 12, face = "bold"),
        plot.caption = element_text(hjust = 0.5, size = 9)) +
    annotate(x = 0, xend = 0, y = -0.02, yend = 110.02, colour = "black", lwd = 0.75, geom = "segment") +
  annotate(y = 0, yend = 0, x = 0, xend = 3, colour = NA, lwd = 0.75, geom = "segment"),
gradient)
ggsave("graphics/body_part.jpg", width = 6, height = 4.38)
```

```{r}
ggbackground(ggplot(goal_location, aes(What, Shots, label = paste0(GoalLocation, ": ", Shots))) +
  facet_wrap(~ Club, scales = "fixed", strip.position = "bottom") +
  annotation_custom(grid::rasterGrob(logo_fcb, width = 0.4)) +
  annotation_custom(grid::rasterGrob(logo_city, width = 0.4)) +
  geom_chicklet(aes(fill = Club, colour = NULL), width = 0.8, na.rm = T) +
  geom_text(color = 'white', fill = NA, size = 1.5, position = position_stack(vjust = 0.5)) +
  scale_x_discrete(limits = c("left", "centre", "right")) +
  scale_y_continuous(expand=expansion(mult=c(0.1,0.1)), breaks = seq(0, 45, by = 5)) +
  scale_color_manual(values = c('#ffe5e5', "#e5e5ff")) +
  scale_fill_manual(values = c("#B22222", "#131E3A")) +
  labs(title = "\nC) Total Number of Shots Taken - by Goal Location",
       subtitle = "Matchday 1-5 | 2023-2024",
       caption = "\nGraphic: @ypAnalysis | Data via Sofascore\n\n") +
  theme_classic() +
  theme(axis.ticks.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.line.x = element_blank(),
        axis.line.y = element_blank(),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, vjust = 0.1, size = 12, face = "bold"),
        plot.caption = element_text(hjust = 0.5, size = 9),
        legend.position = "top",
        legend.title = element_blank(), 
        strip.background = element_blank(),
        strip.text = element_text(colour = "grey40"),
        panel.spacing = unit(2, "lines"),
        panel.border = element_rect(colour = "black", fill=NA)),
gradient)
ggsave("graphics/goal_location.jpg", width = 6, height = 6)
```

```{r}
ggbackground(ggplot(time_xg, aes(What, Value)) +
  facet_wrap(~ What, scales = "free") +
  annotation_custom(grid::rasterGrob(logo_fcb, width = 0.4)) +
  annotation_custom(grid::rasterGrob(logo_city, width = 0.4)) +
  geom_violin(aes(fill = Club, colour = Club)) +
  scale_y_continuous(expand=expansion(mult=c(0.1,0.1)), breaks = scales::pretty_breaks(n = 10)) +
  scale_fill_manual(values = c('#ffe5e5', "#e5e5ff")) +
  scale_color_manual(values = c("#B22222", "#131E3A")) +
  labs(title = "\nC) Time & xG of Any Shot Taken",
       subtitle = "Matchday 1-5 | 2023-2024",
       caption = "\nGraphic: @ypAnalysis | Data via Sofascore\n\n") +
  theme_classic() +
  theme(axis.ticks.x = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.line.x = element_blank(),
        axis.line.y = element_blank(),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, vjust = 0.1, size = 12, face = "bold"),
        plot.caption = element_text(hjust = 0.5, size = 9),
        legend.position = "top",
        legend.title = element_blank(), 
        strip.text = element_blank(),
        panel.spacing = unit(2, "lines"),
        panel.border = element_rect(colour = "black", fill=NA)),
gradient)
ggsave("graphics/time_xg.jpg")
```

```{r}
ggbackground(ggplot() +
  annotate_pitch(dimensions = pitch_opta, colour = "gray15", fill = NA, goals = goals_line) +
  geom_point(shot_position, mapping = aes(shot_loc_x, shot_loc_y, colour = Club), show.legend = T) +
  geom_rect(aes(xmin = 33, xmax = 45, ymin = -1, ymax = 1), fill = "#ffe5e5") +
  geom_rect(aes(xmin = 33, xmax = 45, ymin = 99, ymax = 101), fill = "#e5e5ff") +
  scale_color_manual(values = c("#B22222", "#1e90ff")) +
  labs(title = "\nA) Shotmap of Any Shot Taken",
       subtitle = "Matchday 1-5 | 2023-2024",
       caption = "\nGraphic: @ypAnalysis | Data via Sofascore\n\n") +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, vjust = 0.1, size = 12, face = "bold"),
        plot.caption = element_text(hjust = 0.5, size = 9),
        legend.position = c(0.49, 0.9),
        legend.title = element_blank(),
        legend.direction = "horizontal",
        axis.line = element_blank(),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  coord_flip(xlim = c(1.5, 38), ylim = c(105, -5)) +
  scale_y_reverse(),
gradient)
ggsave("graphics/shot_position.jpg")
```

```{r}
ggbackground(ggplot() +
  annotate_pitch(dimensions = pitch_opta, colour = "gray15", fill = NA, goals = goals_line) +
  geom_point(shot_position, mapping = aes(shot_loc_x, shot_loc_y, colour = Club), show.legend = T, alpha = 0.4) +
  geom_curve(aes(x = 7.86, xend = 7.86, y = 35, yend = 65), colour = "#B22222", curvature = 0.75, linewidth = 0.6, lineend = "round") +
  geom_curve(aes(x = 8.35, xend = 8.35, y = 35, yend = 65), colour = "#1e90ff", curvature = 0.73, linewidth = 0.6,  lineend = "round") +
  geom_rect(aes(xmin = 33, xmax = 45, ymin = -1, ymax = 1), fill = "#ffe5e5") +
  geom_rect(aes(xmin = 33, xmax = 45, ymin = 99, ymax = 101), fill = "#e5e5ff") +
  scale_color_manual(values = c("#B22222", "#1e90ff")) +
  labs(title = "\nB) Shotmap of Any Shot Taken",
       subtitle = "Matchday 1-5 | 2023-2024",
       caption = "\nGraphic: @ypAnalysis | Data via Sofascore\nLines represent the average distance [shooting point - center of the goal] of the respective team\n") +
  theme_classic() +
  theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, vjust = 0.1, size = 12, face = "bold"),
        plot.caption = element_text(hjust = 0.5, size = 9, lineheight = 1.2),
        legend.position = c(0.49, 0.9),
        legend.title = element_blank(),
        legend.direction = "horizontal",
        axis.line = element_blank(),
        axis.text.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank()) +
  coord_flip(xlim = c(1.5, 38), ylim = c(105, -5)) +
  scale_y_reverse(),
gradient)
ggsave("graphics/shot_position_mean.jpg")
```

```{r}
ggbackground(ggplot(insides, aes(reorder(Club, What), Shots, label = paste0(Value, ": ", Shots))) +
  facet_wrap(~ What, scales = "free", strip.position = "bottom") +
  annotation_custom(grid::rasterGrob(logo_fcb, width = 0.4)) +
  annotation_custom(grid::rasterGrob(logo_city, width = 0.4)) +
  geom_chicklet(aes(fill = Club, colour = NULL), width = 0.6) +
  geom_text(color = 'white', fill = NA, size = 1.5, position = position_stack(vjust = 0.5)) +
  scale_y_continuous(expand=expansion(mult=c(0.1,0.1)), breaks = seq(0, 110, by = 10)) +
  scale_color_manual(values = c('#ffe5e5', "#e5e5ff")) +
  scale_fill_manual(values = c("#B22222", "#131E3A")) +
  labs(title = "\nC) Insides of Any Shot Taken",
       subtitle = "Matchday 1-5 | 2023-2024",
       caption = "\nGraphic: @ypAnalysis | Data via Sofascore\n\n") +
  theme_classic() +
  theme(axis.ticks.x = element_blank(),
        axis.text.x = element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.line.x = element_blank(),
        axis.line.y = element_blank(),
        plot.title = element_text(hjust = 0.5, size = 16, face = "bold"),
        plot.subtitle = element_text(hjust = 0.5, vjust = 0.1, size = 12, face = "bold"),
        plot.caption = element_text(hjust = 0.5, size = 9),
        legend.position = "top",
        legend.title = element_blank(), 
        strip.background = element_blank(),
        strip.text = element_text(colour = "grey40"),
        panel.spacing = unit(2, "lines"),
        panel.border = element_rect(colour = "black", fill=NA)),
gradient)
ggsave("graphics/insides.jpg")
```
